//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_75
.address_size 64

	// .globl	_Z12rayAllocatorv
.global .align 8 .b8 index[8];
.global .align 1 .b8 result[1];
.global .align 1 .b8 vertices[1];
.global .align 4 .u32 frame;
.global .align 4 .b8 background[12];
.global .align 4 .b8 materialColor[12];
.global .align 4 .b8 eye[16];
.global .align 4 .f32 offset;
.global .align 4 .b8 group[4];
.global .align 4 .b8 rayData[16];
.global .align 4 .b8 _ZN21rti_internal_typeinfo5indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5frameE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10backgroundE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13materialColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6offsetE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5groupE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7rayDataE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename5indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5frameE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10backgroundE[14] = {68, 101, 102, 105, 110, 101, 58, 58, 67, 111, 108, 111, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13materialColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[12] = {68, 101, 102, 105, 110, 101, 58, 58, 69, 121, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6offsetE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5groupE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7rayDataE[16] = {68, 101, 102, 105, 110, 101, 58, 58, 82, 97, 121, 68, 97, 116, 97, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum5indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5frameE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10backgroundE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13materialColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6offsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5groupE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7rayDataE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic5indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5frameE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10backgroundE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13materialColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6offsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5groupE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7rayDataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation5indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5frameE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10backgroundE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13materialColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6offsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5groupE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7rayDataE[1];

.visible .entry _Z12rayAllocatorv(

)
{
	.local .align 4 .b8 	__local_depot0[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<15>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd13, result;
	cvta.global.u64 	%rd5, %rd13;
	mov.u32 	%r8, 2;
	mov.u32 	%r9, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r8, %r9);
	// inline asm
	ld.global.v2.u32 	{%r10, %r11}, [index];
	mov.u32 	%r6, 0;
	shl.b32 	%r14, %r10, 1;
	cvt.rn.f32.u32	%f9, %r14;
	cvt.rn.f32.u64	%f10, %rd1;
	sub.f32 	%f11, %f9, %f10;
	shl.b32 	%r15, %r11, 1;
	cvt.rn.f32.u32	%f12, %r15;
	cvt.rn.f32.u64	%f13, %rd2;
	sub.f32 	%f14, %f12, %f13;
	ld.global.f32 	%f15, [eye+12];
	ld.global.f32 	%f1, [eye];
	ld.global.f32 	%f2, [eye+4];
	ld.global.f32 	%f3, [eye+8];
	mul.f32 	%f16, %f14, %f14;
	fma.rn.f32 	%f17, %f11, %f11, %f16;
	fma.rn.f32 	%f18, %f15, %f15, %f17;
	sqrt.rn.f32 	%f19, %f18;
	rcp.rn.f32 	%f20, %f19;
	mul.f32 	%f4, %f11, %f20;
	mul.f32 	%f5, %f14, %f20;
	mul.f32 	%f6, %f15, %f20;
	ld.global.f32 	%f7, [offset];
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd14, %SPL, 0;
	st.local.u32 	[%rd14+12], %r6;
	ld.global.u32 	%r3, [group];
	mov.u32 	%r5, 255;
	mov.f32 	%f8, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r3, %f1, %f2, %f3, %f4, %f5, %f6, %r6, %f7, %f8, %r5, %r6, %rd6, %r9);
	// inline asm
	ld.global.v2.u32 	{%r16, %r17}, [index];
	cvt.u64.u32	%rd9, %r16;
	cvt.u64.u32	%rd10, %r17;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r8, %r9, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f21, [%rd14+8];
	ld.local.f32 	%f22, [%rd14+4];
	ld.local.f32 	%f23, [%rd14];
	mov.f32 	%f24, 0f3F800000;
	st.v4.f32 	[%rd7], {%f23, %f22, %f21, %f24};
	ret;
}

	// .globl	_Z6anyHitv
.visible .entry _Z6anyHitv(

)
{



	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z8closeHitv
.visible .entry _Z8closeHitv(

)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	mov.u64 	%rd1, 1065353216;
	st.global.u32 	[rayData+4], %rd1;
	mov.u64 	%rd2, 0;
	st.global.u32 	[rayData], %rd2;
	mov.u32 	%r1, 0;
	st.global.u32 	[rayData+8], %r1;
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<5>;


	ld.global.u32 	%rd1, [background];
	ld.global.u32 	%rd2, [background+4];
	bfi.b64 	%rd3, %rd2, %rd1, 32, 32;
	ld.global.f32 	%f1, [background+8];
	st.global.u32 	[rayData], %rd3;
	shr.u64 	%rd4, %rd3, 32;
	st.global.u32 	[rayData+4], %rd4;
	st.global.f32 	[rayData+8], %f1;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [index];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, result;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.v4.f32 	[%rd1], {%f2, %f1, %f1, %f1};
	ret;
}


