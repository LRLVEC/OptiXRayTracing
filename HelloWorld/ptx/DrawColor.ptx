//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_75
.address_size 64

	// .globl	_Z9drawColorv
.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 result[1];
.global .align 4 .b8 color[12];
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5colorE[1];

.visible .entry _Z9drawColorv(

)
{
	.reg .f32 	%f<17>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<23>;


	ld.global.v2.u32 	{%r9, %r10}, [launch_index];
	cvt.u64.u32	%rd3, %r9;
	cvt.u64.u32	%rd4, %r10;
	mov.u64 	%rd22, result;
	cvta.global.u64 	%rd2, %rd22;
	mov.u32 	%r7, 2;
	mov.u32 	%r8, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r8, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	ld.global.f32 	%f1, [color];
	ld.global.u32 	%r13, [launch_index];
	cvt.rn.f32.u32	%f2, %r13;
	// inline asm
	call (%rd7, %rd8, %rd9, %rd10), _rt_buffer_get_size_64, (%rd2, %r7, %r8);
	// inline asm
	cvt.rn.f32.u64	%f3, %rd7;
	div.rn.f32 	%f4, %f2, %f3;
	ld.global.f32 	%f5, [color+4];
	ld.global.u32 	%r14, [launch_index+4];
	cvt.rn.f32.u32	%f6, %r14;
	// inline asm
	call (%rd12, %rd13, %rd14, %rd15), _rt_buffer_get_size_64, (%rd2, %r7, %r8);
	// inline asm
	cvt.rn.f32.u64	%f7, %rd13;
	div.rn.f32 	%f8, %f6, %f7;
	ld.global.f32 	%f9, [color+8];
	ld.global.u32 	%r15, [launch_index];
	cvt.rn.f32.u32	%f10, %r15;
	// inline asm
	call (%rd17, %rd18, %rd19, %rd20), _rt_buffer_get_size_64, (%rd2, %r7, %r8);
	// inline asm
	cvt.rn.f32.u64	%f11, %rd17;
	div.rn.f32 	%f12, %f10, %f11;
	add.f32 	%f13, %f1, %f4;
	add.f32 	%f14, %f5, %f8;
	add.f32 	%f15, %f9, %f12;
	mov.f32 	%f16, 0f00000000;
	st.v4.f32 	[%rd1], {%f13, %f14, %f15, %f16};
	ret;
}


